# Choregraphe bezier export in Python.
from naoqi import *
import rospy

def play(roscore_ip,nao_ip):
    broker = ALBroker("pythonBroker",roscore_ip,9999,nao_ip,9559)
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.0183661, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0183661, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0183661, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.0183661, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.030638, [3, -0.253333, 0], [3, 0.4, 0]], [0.030638, [3, -0.4, 0], [3, 0.266667, 0]], [0.030638, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.021518, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.021518, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.021518, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.021518, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.021518, [3, -0.253333, 0], [3, 0.4, 0]], [-0.021518, [3, -0.4, 0], [3, 0.266667, 0]], [-0.0107799, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.351328, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.316046, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.553816, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.113474, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.544613, [3, -0.253333, 0], [3, 0.4, 0]], [-0.322183, [3, -0.4, 0], [3, 0.266667, 0]], [-0.343659, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[4.19617e-05, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.179436, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.091998, [3, -0.266667, -0.0360367], [3, 0.0133333, 0.00180183]], [-0.06592, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0873961, [3, -0.253333, 0.0146721], [3, 0.4, -0.0231664]], [-0.179436, [3, -0.4, 0], [3, 0.266667, 0]], [-0.00149202, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-1.00013, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.00013, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.00013, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.981718, [3, -0.0133333, -0.000242232], [3, 0.253333, 0.00460241]], [-0.977116, [3, -0.253333, 0], [3, 0.4, 0]], [-0.977116, [3, -0.4, 0], [3, 0.266667, 0]], [-0.977116, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-1.39138, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.39138, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.39138, [3, -0.266667, 0], [3, 0.0133333, 0]], [-1.39138, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.39138, [3, -0.253333, 0], [3, 0.4, 0]], [-1.39138, [3, -0.4, 0], [3, 0.266667, 0]], [-1.39138, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.2388, [3, -0.266667, 0], [3, 0.266667, 0]], [0.2388, [3, -0.266667, 0], [3, 0.266667, 0]], [0.2388, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.2388, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.2388, [3, -0.253333, 0], [3, 0.4, 0]], [0.2388, [3, -0.4, 0], [3, 0.266667, 0]], [0.2388, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.45709, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.458624, [3, -0.266667, 0.00153415], [3, 0.266667, -0.00153415]], [-0.80991, [3, -0.266667, 0.182619], [3, 0.0133333, -0.00913095]], [-1.03387, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.814512, [3, -0.253333, -0.0747486], [3, 0.4, 0.118024]], [-0.455555, [3, -0.4, 0], [3, 0.266667, 0]], [-0.45709, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[4.19617e-05, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0106959, [3, -0.266667, 0.0107379], [3, 0.266667, -0.0107379]], [-0.115008, [3, -0.266667, 0.0306795], [3, 0.0133333, -0.00153397]], [-0.116542, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.11194, [3, -0.253333, -0.00460191], [3, 0.4, 0.00726617]], [-0.0106959, [3, -0.4, -0.0161068], [3, 0.266667, 0.0107379]], [4.19617e-05, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.00302602, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0260359, [3, -0.266667, 0.0230099], [3, 0.266667, -0.0230099]], [-0.159494, [3, -0.266667, 0.0511334], [3, 0.0133333, -0.00255667]], [-0.187106, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.16563, [3, -0.253333, -0.0206203], [3, 0.4, 0.0325584]], [-0.0275701, [3, -0.4, -0.0207089], [3, 0.266667, 0.013806]], [-0.0137641, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.694859, [3, -0.266667, 0], [3, 0.266667, 0]], [0.670316, [3, -0.266667, 0], [3, 0.266667, 0]], [1.34221, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.839057, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.34067, [3, -0.253333, 0], [3, 0.4, 0]], [0.671851, [3, -0.4, 0], [3, 0.266667, 0]], [0.716335, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[1.42351, [3, -0.266667, 0], [3, 0.266667, 0]], [1.42351, [3, -0.266667, 0], [3, 0.266667, 0]], [1.42351, [3, -0.266667, 0], [3, 0.0133333, 0]], [1.48947, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.44959, [3, -0.253333, 0], [3, 0.4, 0]], [1.44959, [3, -0.4, 0], [3, 0.266667, 0]], [1.42504, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.262272, [3, -0.266667, 0], [3, 0.266667, 0]], [0.262272, [3, -0.266667, 0], [3, 0.266667, 0]], [0.262272, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.251533, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.256136, [3, -0.253333, 0], [3, 0.4, 0]], [0.256136, [3, -0.4, 0], [3, 0.266667, 0]], [0.256136, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.0260359, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0260359, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0260359, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.0260359, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.0260359, [3, -0.253333, 0], [3, 0.4, 0]], [0.0260359, [3, -0.4, 0], [3, 0.266667, 0]], [0.0260359, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.34971, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.529187, [3, -0.266667, 0.00920488], [3, 0.266667, -0.00920488]], [-0.538392, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.532256, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.546061, [3, -0.253333, 0], [3, 0.4, 0]], [-0.523053, [3, -0.4, -0.0230087], [3, 0.266667, 0.0153391]], [-0.34971, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.00609397, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.223922, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.223922, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.226991, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.222388, [3, -0.253333, 0], [3, 0.4, 0]], [-0.223922, [3, -0.4, 0], [3, 0.266667, 0]], [0.00310993, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.974133, [3, -0.266667, 0], [3, 0.266667, 0]], [0.974133, [3, -0.266667, 0], [3, 0.266667, 0]], [0.974133, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.963394, [3, -0.0133333, 0.000511352], [3, 0.253333, -0.0097157]], [0.943452, [3, -0.253333, 0.00456024], [3, 0.4, -0.00720037]], [0.928112, [3, -0.4, 0], [3, 0.266667, 0]], [0.980268, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[1.36215, [3, -0.266667, 0], [3, 0.266667, 0]], [1.36215, [3, -0.266667, 0], [3, 0.266667, 0]], [1.36215, [3, -0.266667, 0], [3, 0.0133333, 0]], [1.34834, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.36215, [3, -0.253333, 0], [3, 0.4, 0]], [1.36215, [3, -0.4, 0], [3, 0.266667, 0]], [1.36215, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.2692, [3, -0.266667, 0], [3, 0.266667, 0]], [0.2692, [3, -0.266667, 0], [3, 0.266667, 0]], [0.2692, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.2692, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.2692, [3, -0.253333, 0], [3, 0.4, 0]], [0.2692, [3, -0.4, 0], [3, 0.266667, 0]], [0.2692, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.449504, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.668866, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.668866, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.667332, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.667332, [3, -0.253333, 0], [3, 0.4, 0]], [-0.667332, [3, -0.4, 0], [3, 0.266667, 0]], [-0.44797, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.00609397, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00464392, [3, -0.266667, -0.00153399], [3, 0.266667, 0.00153399]], [0.00617791, [3, -0.266667, -0.00146093], [3, 0.0133333, 7.30467e-05]], [0.00924586, [3, -0.0133333, -0.000178969], [3, 0.253333, 0.00340041]], [0.016916, [3, -0.253333, 0], [3, 0.4, 0]], [0.00464392, [3, -0.4, 0], [3, 0.266667, 0]], [0.00464392, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.00302602, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0260359, [3, -0.266667, 0.0230099], [3, 0.266667, -0.0230099]], [-0.159494, [3, -0.266667, 0.0511334], [3, 0.0133333, -0.00255667]], [-0.187106, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.16563, [3, -0.253333, -0.0206203], [3, 0.4, 0.0325584]], [-0.0275701, [3, -0.4, -0.0207089], [3, 0.266667, 0.013806]], [-0.0137641, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.70108, [3, -0.266667, 0], [3, 0.266667, 0]], [1.08305, [3, -0.266667, 0], [3, 0.266667, 0]], [1.07077, [3, -0.266667, 0], [3, 0.0133333, 0]], [1.07844, [3, -0.0133333, -8.07464e-05], [3, 0.253333, 0.00153418]], [1.07998, [3, -0.253333, -0.000793165], [3, 0.4, 0.00125237]], [1.08458, [3, -0.4, 0], [3, 0.266667, 0]], [0.70875, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[1.4466, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4466, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4466, [3, -0.266667, 0], [3, 0.0133333, 0]], [1.4466, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.46655, [3, -0.253333, 0], [3, 0.4, 0]], [1.46655, [3, -0.4, 0], [3, 0.266667, 0]], [1.4374, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[-0.262356, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.245482, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.25622, [3, -0.266667, 0], [3, 0.0133333, 0]], [-0.254685, [3, -0.0133333, -0.000255662], [3, 0.253333, 0.00485757]], [-0.24088, [3, -0.253333, 0], [3, 0.4, 0]], [-0.24088, [3, -0.4, 0], [3, 0.266667, 0]], [-0.268493, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.8, 1.6, 2.4, 2.44, 3.2, 4.4, 5.2])
    keys.append([[0.0137641, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0137641, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0137641, [3, -0.266667, 0], [3, 0.0133333, 0]], [0.0137641, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.0137641, [3, -0.253333, 0], [3, 0.4, 0]], [0.0137641, [3, -0.4, 0], [3, 0.266667, 0]], [0.0137641, [3, -0.266667, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion")
        motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        rospy.logerr(err)

if __name__ == '__main__':
    roscore_ip = "127.0.0.1"
    nao_ip = "192.168.51.2"
    play(roscore_ip,nao_ip)
